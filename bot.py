import os
import telebot
from telebot import types
import yt_dlp
import tempfile
import logging
from threading import Thread
from http.server import HTTPServer, BaseHTTPRequestHandler
import time
import re
from urllib.parse import urlparse
import shutil

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

class HealthHandler(BaseHTTPRequestHandler):
    """HTTP –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è health check –Ω–∞ Render"""
    def do_GET(self):
        try:
            self.send_response(200)
            self.send_header('Content-type', 'text/html; charset=utf-8')
            self.end_headers()
            
            response = """
            <!DOCTYPE html>
            <html>
            <head>
                <title>Video Downloader Bot</title>
                <meta charset="UTF-8">
                <style>
                    body { font-family: Arial, sans-serif; text-align: center; padding: 50px; background: #1a1a1a; color: white; }
                    h1 { color: #00d4aa; }
                </style>
            </head>
            <body>
                <h1>üé¨ Video Downloader Bot</h1>
                <p>‚úÖ Online and Ready</p>
                <p>üë®‚Äçüíª Developer: @oxygw</p>
            </body>
            </html>
            """
            self.wfile.write(response.encode('utf-8'))
        except Exception as e:
            logger.error(f"HTTP error: {e}")
    
    def do_HEAD(self):
        self.send_response(200)
        self.end_headers()
    
    def log_message(self, format, *args):
        return

def keep_alive():
    """HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è Render"""
    try:
        port = int(os.environ.get('PORT', 8000))
        server = HTTPServer(('0.0.0.0', port), HealthHandler)
        logger.info(f"HTTP server starting on port {port}")
        server.serve_forever()
    except Exception as e:
        logger.error(f"HTTP server error: {e}")

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = os.environ.get('BOT_TOKEN')

if not BOT_TOKEN:
    logger.error("BOT_TOKEN not found!")
    exit(1)

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
bot = telebot.TeleBot(BOT_TOKEN)

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
stats = {'total': 0, 'success': 0, 'failed': 0}

# –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
PLATFORMS = {
    'youtube.com': 'üî¥ YouTube',
    'youtu.be': 'üî¥ YouTube',
    'tiktok.com': 'üéµ TikTok',
    'vm.tiktok.com': 'üéµ TikTok',
    'instagram.com': 'üì∏ Instagram',
    'twitter.com': 'üê¶ Twitter',
    'x.com': 'üê¶ X'
}

def detect_platform(url):
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—É"""
    for domain, platform in PLATFORMS.items():
        if domain in url.lower():
            return platform
    return None

def is_valid_url(url):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç URL"""
    try:
        result = urlparse(url)
        return all([result.scheme, result.netloc])
    except:
        return False

def safe_send_message(chat_id, text, reply_markup=None, parse_mode='Markdown'):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å retry"""
    for attempt in range(3):
        try:
            return bot.send_message(chat_id, text, reply_markup=reply_markup, parse_mode=parse_mode)
        except Exception as e:
            if "too many requests" in str(e).lower():
                time.sleep(2 ** attempt)
                continue
            elif attempt == 2:
                try:
                    return bot.send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è")
                except:
                    pass
            break
    return None

def safe_edit_message(chat_id, message_id, text, reply_markup=None, parse_mode='Markdown'):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    for attempt in range(3):
        try:
            return bot.edit_message_text(text, chat_id, message_id, reply_markup=reply_markup, parse_mode=parse_mode)
        except Exception as e:
            if "too many requests" in str(e).lower():
                time.sleep(2 ** attempt)
                continue
            elif "message is not modified" in str(e).lower():
                return True
            elif attempt == 2:
                return None
            break
    return None

@bot.message_handler(commands=['start'])
def start_command(message):
    """–ö–æ–º–∞–Ω–¥–∞ /start"""
    user_name = message.from_user.first_name or "–¥—Ä—É–≥"
    
    text = f"""üé¨ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user_name}!**

üöÄ **Video Downloader Bot**

**üì± –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å–∞–π—Ç—ã:**
‚Ä¢ üî¥ YouTube & Shorts
‚Ä¢ üéµ TikTok 
‚Ä¢ üì∏ Instagram
‚Ä¢ üê¶ Twitter/X

**‚ö° –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:**
1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ
2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É
3. –ü–æ–ª—É—á–∏—Ç–µ –≤–∏–¥–µ–æ!

**üë®‚Äçüíª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:** @oxygw

üí° *–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –Ω–∞—á–∞–ª–∞!*"""

    markup = types.InlineKeyboardMarkup(row_width=2)
    btn1 = types.InlineKeyboardButton("üìã –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å–∞–π—Ç—ã", callback_data="supported")
    btn2 = types.InlineKeyboardButton("‚ùì –ü–æ–º–æ—â—å", callback_data="help")
    btn3 = types.InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats")
    markup.add(btn1, btn2)
    markup.add(btn3)
    
    safe_send_message(message.chat.id, text, reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫"""
    try:
        markup = types.InlineKeyboardMarkup()
        back_btn = types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="menu")
        markup.add(back_btn)
        
        if call.data == "supported":
            text = "üìã **–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:**\n\n"
            for domain, platform in PLATFORMS.items():
                text += f"{platform} - `{domain}`\n"
            text += "\nüí° *–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É —Å –ª—é–±–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã!*"
            
        elif call.data == "help":
            text = """‚ùì **–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è**

**üîó –§–æ—Ä–º–∞—Ç—ã —Å—Å—ã–ª–æ–∫:**
‚Ä¢ `https://youtube.com/watch?v=...`
‚Ä¢ `https://youtu.be/...`
‚Ä¢ `https://tiktok.com/@user/video/...`
‚Ä¢ `https://instagram.com/p/...`
‚Ä¢ `https://twitter.com/.../status/...`

**‚öôÔ∏è –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
‚úÖ –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
‚úÖ –ö–∞—á–µ—Å—Ç–≤–æ –¥–æ 480p
‚úÖ –†–∞–∑–º–µ—Ä –¥–æ 40MB
‚úÖ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–æ 10 –º–∏–Ω—É—Ç

**üí° –°–æ–≤–µ—Ç—ã:**
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä—è–º—ã–µ —Å—Å—ã–ª–∫–∏
‚Ä¢ –ï—Å–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É
‚Ä¢ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7

**üë®‚Äçüíª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:** @oxygw"""
            
        elif call.data == "stats":
            success_rate = (stats['success']/max(stats['total'], 1)*100) if stats['total'] > 0 else 0
            text = f"""üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**

üéØ **–í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤:** {stats['total']}
‚úÖ **–£—Å–ø–µ—à–Ω–æ:** {stats['success']}
‚ùå **–û—à–∏–±–æ–∫:** {stats['failed']}
üìà **–£—Å–ø–µ—à–Ω–æ—Å—Ç—å:** {success_rate:.1f}%

üë®‚Äçüíª **–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:** @oxygw
üöÄ **–°—Ç–∞—Ç—É—Å:** Online 24/7"""
            
        elif call.data == "menu":
            user_name = call.from_user.first_name or "–¥—Ä—É–≥"
            text = f"""üé¨ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user_name}!**

üöÄ **Video Downloader Bot**

**üì± –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å–∞–π—Ç—ã:**
‚Ä¢ üî¥ YouTube & Shorts
‚Ä¢ üéµ TikTok 
‚Ä¢ üì∏ Instagram
‚Ä¢ üê¶ Twitter/X

**‚ö° –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:**
1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ
2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É
3. –ü–æ–ª—É—á–∏—Ç–µ –≤–∏–¥–µ–æ!

**üë®‚Äçüíª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:** @oxygw

üí° *–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –Ω–∞—á–∞–ª–∞!*"""
            
            markup = types.InlineKeyboardMarkup(row_width=2)
            btn1 = types.InlineKeyboardButton("üìã –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å–∞–π—Ç—ã", callback_data="supported")
            btn2 = types.InlineKeyboardButton("‚ùì –ü–æ–º–æ—â—å", callback_data="help")
            btn3 = types.InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats")
            markup.add(btn1, btn2)
            markup.add(btn3)
        
        safe_edit_message(call.message.chat.id, call.message.message_id, text, reply_markup=markup)
        
        try:
            bot.answer_callback_query(call.id)
        except:
            pass
            
    except Exception as e:
        logger.error(f"Callback error: {e}")

def download_video(url, chat_id, message_id):
    """–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ"""
    temp_dir = None
    try:
        stats['total'] += 1
        
        # –°—Ç–∞—Ç—É—Å: –∞–Ω–∞–ª–∏–∑
        safe_edit_message(chat_id, message_id, "‚è≥ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å—Å—ã–ª–∫—É...")
        
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
        temp_dir = tempfile.mkdtemp()
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ yt-dlp
        ydl_opts = {
            'format': 'worst[height<=480]/best[height<=480]/worst',
            'outtmpl': os.path.join(temp_dir, '%(title)s.%(ext)s'),
            'noplaylist': True,
            'no_warnings': True,
            'ignoreerrors': False,
            'geo_bypass': True,
            'user_agent': 'Mozilla/5.0 (iPhone; CPU iPhone OS 14_6 like Mac OS X)',
            'http_headers': {
                'User-Agent': 'Mozilla/5.0 (iPhone; CPU iPhone OS 14_6 like Mac OS X)',
                'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
            }
        }
        
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            safe_edit_message(chat_id, message_id, "üìä –ü–æ–ª—É—á–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é...")
            
            try:
                info = ydl.extract_info(url, download=False)
            except Exception as e:
                error_msg = str(e).lower()
                if any(word in error_msg for word in ['private', 'forbidden', '403']):
                    safe_edit_message(chat_id, message_id, "‚ùå –í–∏–¥–µ–æ –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ –∏–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ")
                elif any(word in error_msg for word in ['sign in', 'bot', 'confirm']):
                    safe_edit_message(chat_id, message_id, "‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É")
                elif any(word in error_msg for word in ['unavailable', 'not found', 'deleted']):
                    safe_edit_message(chat_id, message_id, "‚ùå –í–∏–¥–µ–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–æ")
                elif any(word in error_msg for word in ['geo', 'country', 'region']):
                    safe_edit_message(chat_id, message_id, "‚ùå –í–∏–¥–µ–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –≤–∞—à–µ–º —Ä–µ–≥–∏–æ–Ω–µ")
                elif any(word in error_msg for word in ['too many', 'rate', 'limit']):
                    safe_edit_message(chat_id, message_id, "‚ùå –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç")
                else:
                    safe_edit_message(chat_id, message_id, f"‚ùå –û—à–∏–±–∫–∞: {str(e)[:50]}...")
                stats['failed'] += 1
                return
            
            title = info.get('title', 'Video')[:40]
            duration = info.get('duration', 0)
            platform = detect_platform(url)
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∏
            if duration and duration > 600:  # 10 –º–∏–Ω—É—Ç
                safe_edit_message(chat_id, message_id, "‚ùå –í–∏–¥–µ–æ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (–º–∞–∫—Å–∏–º—É–º 10 –º–∏–Ω—É—Ç)")
                stats['failed'] += 1
                return
            
            # –°–∫–∞—á–∏–≤–∞–µ–º
            safe_edit_message(chat_id, message_id, f"‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞—é: {title}...")
            
            try:
                ydl.download([url])
            except Exception as e:
                safe_edit_message(chat_id, message_id, f"‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {str(e)[:50]}...")
                stats['failed'] += 1
                return
            
            # –ò—â–µ–º —Ñ–∞–π–ª
            video_files = []
            for file in os.listdir(temp_dir):
                if file.endswith(('.mp4', '.webm', '.mkv', '.avi', '.mov')):
                    video_files.append(file)
            
            if not video_files:
                safe_edit_message(chat_id, message_id, "‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
                stats['failed'] += 1
                return
            
            file_path = os.path.join(temp_dir, video_files[0])
            file_size = os.path.getsize(file_path)
            
            if file_size > 40 * 1024 * 1024:  # 40MB
                safe_edit_message(chat_id, message_id, "‚ùå –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π (–º–∞–∫—Å–∏–º—É–º 40MB)")
                stats['failed'] += 1
                return
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º
            safe_edit_message(chat_id, message_id, "üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é...")
            
            try:
                with open(file_path, 'rb') as video:
                    caption = f"üé¨ {title}\n\n{platform or 'üì± –í–∏–¥–µ–æ'}\n\nüë®‚Äçüíª @oxygw"
                    
                    bot.send_video(
                        chat_id, 
                        video, 
                        caption=caption,
                        supports_streaming=True,
                        timeout=60
                    )
                
                # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ç—É—Å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                try:
                    bot.delete_message(chat_id, message_id)
                except:
                    pass
                    
                stats['success'] += 1
                
            except Exception as e:
                safe_edit_message(chat_id, message_id, "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ")
                stats['failed'] += 1
                
    except Exception as e:
        logger.error(f"Download error: {e}")
        safe_edit_message(chat_id, message_id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")
        stats['failed'] += 1
    
    finally:
        # –û—á–∏—Å—Ç–∫–∞
        if temp_dir and os.path.exists(temp_dir):
            try:
                shutil.rmtree(temp_dir)
            except:
                pass

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    try:
        text = message.text.strip() if message.text else ""
        
        if is_valid_url(text):
            platform = detect_platform(text)
            
            if platform:
                msg_text = f"""‚úÖ **–°—Å—ã–ª–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞!**

üéØ **–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:** {platform}
üîó **URL:** `{text[:40]}...`

‚è≥ –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É..."""
                
                msg = safe_send_message(message.chat.id, msg_text)
                if msg:
                    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤ –ø–æ—Ç–æ–∫–µ
                    thread = Thread(target=download_video, args=(text, message.chat.id, msg.message_id))
                    thread.daemon = True
                    thread.start()
            else:
                markup = types.InlineKeyboardMarkup()
                back_btn = types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="menu")
                markup.add(back_btn)
                
                safe_send_message(message.chat.id, 
                               "‚ùå **–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è**\n\n"
                               "üìã –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è —Å–ø–∏—Å–∫–∞ —Å–∞–π—Ç–æ–≤\n\n"
                               "üë®‚Äçüíª @oxygw",
                               reply_markup=markup)
        else:
            markup = types.InlineKeyboardMarkup()
            back_btn = types.InlineKeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="menu")
            markup.add(back_btn)
            
            safe_send_message(message.chat.id,
                           "‚ùì **–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ**\n\n"
                           "üìã **–ü–æ–¥–¥–µ—Ä–∂–∫–∞:**\n"
                           "‚Ä¢ üî¥ YouTube\n"
                           "‚Ä¢ üéµ TikTok\n"
                           "‚Ä¢ üì∏ Instagram\n"
                           "‚Ä¢ üê¶ Twitter/X\n\n"
                           "üë®‚Äçüíª **–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:** @oxygw",
                           reply_markup=markup)
    
    except Exception as e:
        logger.error(f"Message handler error: {e}")

if __name__ == "__main__":
    try:
        # HTTP —Å–µ—Ä–≤–µ—Ä
        http_thread = Thread(target=keep_alive)
        http_thread.daemon = True
        http_thread.start()
        
        # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
        logger.info("üé¨ Video Downloader Bot starting...")
        logger.info("üë®‚Äçüíª Developer: @oxygw")
        logger.info("üöÄ Bot ready!")
        
        # Polling —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏
        bot.polling(none_stop=True, interval=3, timeout=60)
        
    except Exception as e:
        logger.error(f"Critical error: {e}")
        time.sleep(15)
        os.execv(__file__, [__file__])