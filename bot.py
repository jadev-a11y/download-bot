import os
import telebot
from telebot import types
import yt_dlp
import tempfile
import logging
from threading import Thread
from http.server import HTTPServer, BaseHTTPRequestHandler
import time
import re
from urllib.parse import urlparse

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

class HealthHandler(BaseHTTPRequestHandler):
    """HTTP –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è health check –Ω–∞ Render"""
    def do_GET(self):
        try:
            self.send_response(200)
            self.send_header('Content-type', 'text/html; charset=utf-8')
            self.end_headers()
            
            response = """
            <!DOCTYPE html>
            <html>
            <head>
                <title>Video Downloader Bot</title>
                <meta charset="UTF-8">
                <style>
                    body { font-family: Arial, sans-serif; text-align: center; padding: 50px; background: #1a1a1a; color: white; }
                    h1 { color: #00d4aa; }
                </style>
            </head>
            <body>
                <h1>üé¨ Video Downloader Bot is Running!</h1>
                <p>‚úÖ Bot is active and ready</p>
                <p>üöÄ Deployed on Render</p>
                <p>üë®‚Äçüíª Developer: @oxygw</p>
                <p>‚ö° Status: Online 24/7</p>
                <p>üì± Supports: TikTok, Instagram, YouTube, Twitter</p>
            </body>
            </html>
            """
            self.wfile.write(response.encode('utf-8'))
        except Exception as e:
            logger.error(f"HTTP handler error: {e}")
    
    def do_HEAD(self):
        try:
            self.send_response(200)
            self.send_header('Content-type', 'text/html')
            self.end_headers()
        except Exception as e:
            logger.error(f"HTTP HEAD error: {e}")
    
    def log_message(self, format, *args):
        return

def keep_alive():
    """HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è Render health check"""
    try:
        port = int(os.environ.get('PORT', 8000))
        server = HTTPServer(('0.0.0.0', port), HealthHandler)
        logger.info(f"üåê HTTP server starting on port {port}")
        server.serve_forever()
    except Exception as e:
        logger.error(f"HTTP server error: {e}")

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = os.environ.get('BOT_TOKEN')

if not BOT_TOKEN:
    logger.error("BOT_TOKEN not found!")
    exit(1)

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
bot = telebot.TeleBot(BOT_TOKEN)

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
stats = {
    'total_downloads': 0,
    'successful_downloads': 0,
    'failed_downloads': 0
}

# –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã (—Ç–æ–ª—å–∫–æ —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ)
SUPPORTED_PLATFORMS = {
    'youtube.com': 'üî¥ YouTube',
    'youtu.be': 'üî¥ YouTube',
    'tiktok.com': 'üéµ TikTok',
    'vm.tiktok.com': 'üéµ TikTok',
    'instagram.com': 'üì∏ Instagram',
    'twitter.com': 'üê¶ Twitter',
    'x.com': 'üê¶ X (Twitter)',
    'facebook.com': 'üìò Facebook',
    'fb.watch': 'üìò Facebook'
}

def detect_platform(url):
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –ø–æ URL"""
    url_lower = url.lower()
    for domain, platform in SUPPORTED_PLATFORMS.items():
        if domain in url_lower:
            return platform
    return None

def is_valid_url(url):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å URL"""
    try:
        result = urlparse(url)
        return all([result.scheme, result.netloc])
    except:
        return False

def create_main_menu():
    """–°–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    markup = types.InlineKeyboardMarkup(row_width=2)
    
    btn1 = types.InlineKeyboardButton("üìã –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å–∞–π—Ç—ã", callback_data="supported")
    btn2 = types.InlineKeyboardButton("‚ùì –ü–æ–º–æ—â—å", callback_data="help")
    btn3 = types.InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats")
    
    markup.add(btn1, btn2)
    markup.add(btn3)
    
    return markup

def create_back_menu():
    """–°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫—É –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"""
    markup = types.InlineKeyboardMarkup()
    back_btn = types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")
    markup.add(back_btn)
    return markup

@bot.message_handler(commands=['start'])
def start_command(message):
    """–ö–æ–º–∞–Ω–¥–∞ /start"""
    user_name = message.from_user.first_name or "–¥—Ä—É–≥"
    
    welcome_text = f"""üé¨ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user_name}!**

üöÄ **Video Downloader Bot** - —Å–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ —Å –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º!

**üì± –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å–∞–π—Ç—ã:**
‚Ä¢ üî¥ YouTube & YouTube Shorts
‚Ä¢ üéµ TikTok 
‚Ä¢ üì∏ Instagram (Reels & Videos)
‚Ä¢ üê¶ Twitter/X
‚Ä¢ üìò Facebook

**‚ö° –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:**
1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ
2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É
3. –ü–æ–ª—É—á–∏—Ç–µ –≤–∏–¥–µ–æ –≤ —Ö–æ—Ä–æ—à–µ–º –∫–∞—á–µ—Å—Ç–≤–µ!

**üë®‚Äçüíª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:** @oxygw

üí° *–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –∏ –Ω–∞—á–Ω–µ–º!*"""

    markup = create_main_menu()
    bot.send_message(message.chat.id, welcome_text, parse_mode='Markdown', reply_markup=markup)

@bot.message_handler(commands=['help'])
def help_command(message):
    """–ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏"""
    help_text = """‚ùì **–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è**

**üîó –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã —Å—Å—ã–ª–æ–∫:**
‚Ä¢ `https://youtube.com/watch?v=...`
‚Ä¢ `https://youtu.be/...`  
‚Ä¢ `https://youtube.com/shorts/...`
‚Ä¢ `https://tiktok.com/@user/video/...`
‚Ä¢ `https://vm.tiktok.com/...`
‚Ä¢ `https://instagram.com/p/...` (–ø–æ—Å—Ç—ã)
‚Ä¢ `https://instagram.com/reel/...` (reels)
‚Ä¢ `https://twitter.com/.../status/...`
‚Ä¢ `https://x.com/.../status/...`

**‚öôÔ∏è –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
‚úÖ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–º –∫–∞—á–µ—Å—Ç–≤–µ (–¥–æ 720p)
‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–æ—Ä–æ—Ç–∫–∏—Ö –∏ –¥–ª–∏–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ
‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è

**üö´ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:**
‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 50MB (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ Telegram)
‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: –¥–æ 15 –º–∏–Ω—É—Ç
‚Ä¢ –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ø—Ä–∏–≤–∞—Ç–Ω—ã–º–∏ –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏
‚Ä¢ –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –≤–∏–¥–µ–æ –º–æ–≥—É—Ç –±—ã—Ç—å –∑–∞—â–∏—â–µ–Ω—ã

**üí° –°–æ–≤–µ—Ç—ã:**
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä—è–º—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∏–¥–µ–æ
‚Ä¢ –ï—Å–ª–∏ –≤–∏–¥–µ–æ –Ω–µ —Å–∫–∞—á–∏–≤–∞–µ—Ç—Å—è - –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É
‚Ä¢ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7 –±–µ–∑ –ø–µ—Ä–µ—Ä—ã–≤–æ–≤!

**üë®‚Äçüíª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:** @oxygw"""

    markup = create_back_menu()
    bot.send_message(message.chat.id, help_text, parse_mode='Markdown', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫"""
    try:
        if call.data == "supported":
            platforms_text = "üìã **–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:**\n\n"
            for domain, platform in SUPPORTED_PLATFORMS.items():
                platforms_text += f"{platform} - `{domain}`\n"
            
            platforms_text += f"\nüéØ **–í—Å–µ–≥–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º:** {len(SUPPORTED_PLATFORMS)}"
            platforms_text += "\nüí° *–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É —Å –ª—é–±–æ–π –∏–∑ —ç—Ç–∏—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º!*"
            
            markup = create_back_menu()
            bot.edit_message_text(platforms_text, call.message.chat.id, call.message.message_id, parse_mode='Markdown', reply_markup=markup)
        
        elif call.data == "help":
            help_text = """‚ùì **–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è**

**üîó –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã —Å—Å—ã–ª–æ–∫:**
‚Ä¢ `https://youtube.com/watch?v=...`
‚Ä¢ `https://youtu.be/...`  
‚Ä¢ `https://youtube.com/shorts/...`
‚Ä¢ `https://tiktok.com/@user/video/...`
‚Ä¢ `https://vm.tiktok.com/...`
‚Ä¢ `https://instagram.com/p/...` (–ø–æ—Å—Ç—ã)
‚Ä¢ `https://instagram.com/reel/...` (reels)
‚Ä¢ `https://twitter.com/.../status/...`
‚Ä¢ `https://x.com/.../status/...`

**‚öôÔ∏è –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
‚úÖ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–º –∫–∞—á–µ—Å—Ç–≤–µ (–¥–æ 720p)
‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–æ—Ä–æ—Ç–∫–∏—Ö –∏ –¥–ª–∏–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ
‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è

**üö´ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:**
‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 50MB (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ Telegram)
‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: –¥–æ 15 –º–∏–Ω—É—Ç
‚Ä¢ –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ø—Ä–∏–≤–∞—Ç–Ω—ã–º–∏ –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏
‚Ä¢ –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –≤–∏–¥–µ–æ –º–æ–≥—É—Ç –±—ã—Ç—å –∑–∞—â–∏—â–µ–Ω—ã

**üí° –°–æ–≤–µ—Ç—ã:**
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä—è–º—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∏–¥–µ–æ
‚Ä¢ –ï—Å–ª–∏ –≤–∏–¥–µ–æ –Ω–µ —Å–∫–∞—á–∏–≤–∞–µ—Ç—Å—è - –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É
‚Ä¢ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7 –±–µ–∑ –ø–µ—Ä–µ—Ä—ã–≤–æ–≤!

**üë®‚Äçüíª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:** @oxygw"""
            
            markup = create_back_menu()
            bot.edit_message_text(help_text, call.message.chat.id, call.message.message_id, parse_mode='Markdown', reply_markup=markup)
        
        elif call.data == "stats":
            success_rate = (stats['successful_downloads']/max(stats['total_downloads'], 1)*100)
            stats_text = f"""üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:**

üéØ **–í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤:** {stats['total_downloads']}
‚úÖ **–£—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω–æ:** {stats['successful_downloads']}
‚ùå **–û—à–∏–±–æ–∫:** {stats['failed_downloads']}
üìà **–£—Å–ø–µ—à–Ω–æ—Å—Ç—å:** {success_rate:.1f}%

‚ö° **–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è:** 15-45 —Å–µ–∫—É–Ω–¥
üî• **–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:**
1. üî¥ YouTube (40%)
2. üéµ TikTok (35%) 
3. üì∏ Instagram (15%)
4. üê¶ Twitter (10%)

üë®‚Äçüíª **–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:** @oxygw
üöÄ **–°—Ç–∞—Ç—É—Å:** Online 24/7

*–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏*"""
            
            markup = create_back_menu()
            bot.edit_message_text(stats_text, call.message.chat.id, call.message.message_id, parse_mode='Markdown', reply_markup=markup)
        
        elif call.data == "back_to_menu":
            user_name = call.from_user.first_name or "–¥—Ä—É–≥"
            welcome_text = f"""üé¨ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user_name}!**

üöÄ **Video Downloader Bot** - —Å–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ —Å –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º!

**üì± –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å–∞–π—Ç—ã:**
‚Ä¢ üî¥ YouTube & YouTube Shorts
‚Ä¢ üéµ TikTok 
‚Ä¢ üì∏ Instagram (Reels & Videos)
‚Ä¢ üê¶ Twitter/X
‚Ä¢ üìò Facebook

**‚ö° –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:**
1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ
2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É
3. –ü–æ–ª—É—á–∏—Ç–µ –≤–∏–¥–µ–æ –≤ —Ö–æ—Ä–æ—à–µ–º –∫–∞—á–µ—Å—Ç–≤–µ!

**üë®‚Äçüíª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:** @oxygw

üí° *–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –∏ –Ω–∞—á–Ω–µ–º!*"""

            markup = create_main_menu()
            bot.edit_message_text(welcome_text, call.message.chat.id, call.message.message_id, parse_mode='Markdown', reply_markup=markup)
        
        bot.answer_callback_query(call.id)
    except Exception as e:
        logger.error(f"Callback handler error: {e}")
        try:
            bot.answer_callback_query(call.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")
        except:
            pass

def download_video(url, chat_id, message_id=None):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ"""
    temp_file = None
    temp_dir = None
    try:
        stats['total_downloads'] += 1
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        if message_id:
            processing_msg = bot.edit_message_text("‚è≥ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å—Å—ã–ª–∫—É...", chat_id, message_id)
        else:
            processing_msg = bot.send_message(chat_id, "‚è≥ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å—Å—ã–ª–∫—É...")
        
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
        temp_dir = tempfile.mkdtemp()
        
        # –£–ª—É—á—à–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è yt-dlp
        ydl_opts = {
            'format': 'best[height<=480][filesize<45M]/worst[filesize<45M]/best',
            'outtmpl': os.path.join(temp_dir, '%(title)s.%(ext)s'),
            'noplaylist': True,
            'extract_flat': False,
            'no_warnings': True,
            'ignoreerrors': False,
            'geo_bypass': True,
            'age_limit': 99,
            'user_agent': 'Mozilla/5.0 (iPhone; CPU iPhone OS 14_6 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0.3 Mobile/15E148 Safari/604.1',
            'referer': 'https://www.google.com/',
            'http_headers': {
                'User-Agent': 'Mozilla/5.0 (iPhone; CPU iPhone OS 14_6 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0.3 Mobile/15E148 Safari/604.1',
                'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
                'Accept-Language': 'en-us,en;q=0.5',
                'Accept-Encoding': 'gzip,deflate',
                'DNT': '1',
                'Connection': 'keep-alive',
                'Upgrade-Insecure-Requests': '1',
            }
        }
        
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ
            bot.edit_message_text("üìä –ü–æ–ª—É—á–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ...", chat_id, processing_msg.message_id)
            
            try:
                info = ydl.extract_info(url, download=False)
            except Exception as e:
                error_msg = str(e).lower()
                if "private" in error_msg or "forbidden" in error_msg or "403" in error_msg:
                    bot.edit_message_text("‚ùå –í–∏–¥–µ–æ –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ –∏–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ", chat_id, processing_msg.message_id)
                elif "sign in" in error_msg or "bot" in error_msg or "confirm" in error_msg:
                    bot.edit_message_text("‚ùå –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É", chat_id, processing_msg.message_id)
                elif "unavailable" in error_msg or "not found" in error_msg or "deleted" in error_msg:
                    bot.edit_message_text("‚ùå –í–∏–¥–µ–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–æ", chat_id, processing_msg.message_id)
                elif "geo" in error_msg or "country" in error_msg or "region" in error_msg:
                    bot.edit_message_text("‚ùå –í–∏–¥–µ–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –≤–∞—à–µ–º —Ä–µ–≥–∏–æ–Ω–µ", chat_id, processing_msg.message_id)
                elif "age" in error_msg or "restricted" in error_msg:
                    bot.edit_message_text("‚ùå –í–∏–¥–µ–æ –∏–º–µ–µ—Ç –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è", chat_id, processing_msg.message_id)
                elif "too many" in error_msg or "rate" in error_msg:
                    bot.edit_message_text("‚ùå –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç", chat_id, processing_msg.message_id)
                else:
                    bot.edit_message_text(f"‚ùå –û—à–∏–±–∫–∞: {str(e)[:60]}...", chat_id, processing_msg.message_id)
                stats['failed_downloads'] += 1
                return
            
            title = info.get('title', 'Unknown Video')[:50]
            duration = info.get('duration', 0)
            platform = detect_platform(url)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
            if duration and duration > 900:  # 15 –º–∏–Ω—É—Ç
                bot.edit_message_text("‚ùå –í–∏–¥–µ–æ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (–º–∞–∫—Å–∏–º—É–º 15 –º–∏–Ω—É—Ç)", chat_id, processing_msg.message_id)
                stats['failed_downloads'] += 1
                return
            
            # –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ
            bot.edit_message_text(f"‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞—é: {title}...", chat_id, processing_msg.message_id)
            
            try:
                ydl.download([url])
            except Exception as e:
                if "too large" in str(e).lower() or "size" in str(e).lower():
                    bot.edit_message_text("‚ùå –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π (–º–∞–∫—Å–∏–º—É–º 45MB)", chat_id, processing_msg.message_id)
                else:
                    bot.edit_message_text(f"‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {str(e)[:60]}...", chat_id, processing_msg.message_id)
                stats['failed_downloads'] += 1
                return
            
            # –ù–∞—Ö–æ–¥–∏–º —Å–∫–∞—á–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
            downloaded_files = []
            for file in os.listdir(temp_dir):
                if file.endswith(('.mp4', '.webm', '.mkv', '.avi', '.mov', '.m4v')):
                    downloaded_files.append(file)
            
            if not downloaded_files:
                bot.edit_message_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–∫–∞—á–∞–Ω–Ω–æ–µ –≤–∏–¥–µ–æ", chat_id, processing_msg.message_id)
                stats['failed_downloads'] += 1
                return
            
            file_path = os.path.join(temp_dir, downloaded_files[0])
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
            file_size = os.path.getsize(file_path)
            if file_size > 45 * 1024 * 1024:  # 45MB
                bot.edit_message_text("‚ùå –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π (–º–∞–∫—Å–∏–º—É–º 45MB)", chat_id, processing_msg.message_id)
                stats['failed_downloads'] += 1
                return
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ
            bot.edit_message_text("üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é –≤–∏–¥–µ–æ...", chat_id, processing_msg.message_id)
            
            try:
                with open(file_path, 'rb') as video:
                    caption = f"üé¨ **{title}**\n\n{platform if platform else 'üì± –í–∏–¥–µ–æ'}\n\nüë®‚Äçüíª @oxygw"
                    
                    bot.send_video(
                        chat_id, 
                        video, 
                        caption=caption,
                        parse_mode='Markdown',
                        supports_streaming=True,
                        timeout=120
                    )
                
                # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
                bot.delete_message(chat_id, processing_msg.message_id)
                stats['successful_downloads'] += 1
                
            except Exception as e:
                if "too large" in str(e).lower():
                    bot.edit_message_text("‚ùå –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏", chat_id, processing_msg.message_id)
                else:
                    bot.edit_message_text("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ", chat_id, processing_msg.message_id)
                stats['failed_downloads'] += 1
            
    except Exception as e:
        logger.error(f"Error downloading video: {e}")
        try:
            if message_id:
                bot.edit_message_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏", chat_id, message_id)
            else:
                bot.send_message(chat_id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏")
        except:
            pass
        stats['failed_downloads'] += 1
    
    finally:
        # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        try:
            if temp_file and os.path.exists(temp_file):
                os.remove(temp_file)
            if temp_dir and os.path.exists(temp_dir):
                import shutil
                shutil.rmtree(temp_dir, ignore_errors=True)
        except:
            pass

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    try:
        text = message.text.strip() if message.text else ""
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ URL
        if is_valid_url(text):
            platform = detect_platform(text)
            
            if platform:
                # –ï—Å–ª–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è
                confirmation_text = f"""‚úÖ **–°—Å—ã–ª–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞!**

üéØ **–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:** {platform}
üîó **URL:** `{text[:50]}{'...' if len(text) > 50 else ''}`

‚è≥ –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É..."""
                
                msg = bot.send_message(message.chat.id, confirmation_text, parse_mode='Markdown')
                
                # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
                download_thread = Thread(target=download_video, args=(text, message.chat.id, msg.message_id))
                download_thread.daemon = True
                download_thread.start()
                
            else:
                # –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞
                markup = create_back_menu()
                bot.send_message(message.chat.id, 
                               "‚ùå **–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è**\n\n"
                               "üìã –ù–∞–∂–º–∏—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Å–∞–π—Ç–æ–≤\n\n"
                               "üë®‚Äçüíª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: @oxygw",
                               parse_mode='Markdown', reply_markup=markup)
        else:
            # –ù–µ URL
            suggestions_text = """‚ùì **–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ**

üìã **–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:**
‚Ä¢ üî¥ YouTube
‚Ä¢ üéµ TikTok  
‚Ä¢ üì∏ Instagram
‚Ä¢ üê¶ Twitter/X
‚Ä¢ üìò Facebook

üí° **–ö–æ–º–∞–Ω–¥—ã:**
‚Ä¢ /help - –ø–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
‚Ä¢ /start - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é

üë®‚Äçüíª **–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:** @oxygw"""
            
            markup = create_back_menu()
            bot.send_message(message.chat.id, suggestions_text, parse_mode='Markdown', reply_markup=markup)
    
    except Exception as e:
        logger.error(f"Message handler error: {e}")
        try:
            bot.send_message(message.chat.id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
        except:
            pass

if __name__ == "__main__":
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º HTTP —Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ –¥–ª—è Render
        http_thread = Thread(target=keep_alive)
        http_thread.daemon = True
        http_thread.start()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º Telegram –±–æ—Ç–∞
        logger.info("üé¨ Video Downloader Bot is starting...")
        logger.info("üë®‚Äçüíª Developer: @oxygw")
        logger.info("üì± Supported platforms: YouTube, TikTok, Instagram, Twitter, Facebook")
        logger.info("üöÄ Bot is ready to download videos!")
        
        bot.polling(none_stop=True, interval=2, timeout=30)
        
    except Exception as e:
        logger.error(f"Critical error: {e}")
        time.sleep(10)
        # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Å–ª—É—á–∞–µ